
# -*- mode: ruby -*-
# vi: set ft=ruby :

# Simple OpenWhisk

# vagrant resume issue https://github.com/mitchellh/vagrant/issues/6787
# Don't use vagrant resume, it will run the provisioning a second producing errors
# Use vagrant suspend and vagrant up (using up it skips provisioning)

BOX = "ubuntu/trusty64-2"
BOX_URL =  "https://cloud-images.ubuntu.com/vagrant/trusty/current/trusty-server-cloudimg-amd64-vagrant-disk1.box"
BOX_MEMORY = ENV['BOX_MEMORY'] || '2048'
BOX_CPUS = ENV['BOX_CPUS'] || '2'

Vagrant.configure('2') do |config|
  config.vm.box = BOX
  config.vm.box_url = BOX_URL
  
  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  config.ssh.forward_agent = true

  config.vm.provider :virtualbox do |vb|
    vb.name = "whisk-" + Time.now.strftime("%y%m%d%H%M")
    vb.gui = ENV['gui'] || false
    vb.cpus = BOX_CPUS
    vb.customize ['modifyvm', :id, '--natdnshostresolver1', 'on']
    vb.customize ['modifyvm', :id, '--natdnsproxy1', 'on']
    vb.customize ['modifyvm', :id, '--ostype', 'Ubuntu_64']
    vb.customize ['modifyvm', :id, '--memory', BOX_MEMORY]
  end

  # Prevents "stdin: is not a tty" on Ubuntu (https://github.com/mitchellh/vagrant/issues/1673)
  config.vm.provision "fix-no-tty", type: "shell" do |s|
    s.privileged = false
    s.inline = "sudo sed -i '/tty/!s/mesg n/tty -s \\&\\& mesg n/' /root/.profile"
  end
  
  # Configure and Run OpenWhisk
$script = <<SCRIPT
  set -e
  set -x
  sudo add-apt-repository ppa:git-core/ppa
  sudo apt-get update
  sudo apt-get install git -y
  git clone --depth=1 https://github.com/openwhisk/openwhisk.git
  cd openwhisk
  (cd tools/ubuntu-setup && source all.sh)
  tools/db/couchdb/start-couchdb-box.sh whisk_admin some_passw0rd
  tools/db/createImmortalDBs.sh --dropit
  ant build
  ant deploy
  # Add openwhisk/bin to system PATH to allow to work with vagrant ssh -- wsk
  sed -i.bak s/:\\\\/bin/:\\\\/bin:\\\\/home\\\\/vagrant\\\\/openwhisk\\\\/bin/g /etc/environment
  # TODO: redoing symlinks to workaround windows problem, when go-cli lands this needs to be removed and use of symlinks
  rm -r bin/wsk && rm -r bin/wskadmin
  (cd bin && sudo ln -s ../tools/cli/wsk wsk)
  (cd bin && sudo ln -s ../tools/cli/wskadmin wskadmin)
  cat config/keys/auth.guest | HOME=/home/vagrant xargs bin/wsk property set --auth
  chown -R vagrant:vagrant /home/vagrant
  sleep 60
  HOME=/home/vagrant bin/wsk action invoke /whisk.system/samples/echo -p message hello --blocking --result
SCRIPT

  config.vm.provision "setup_script", type: "shell", privileged: true, keep_color: true, inline: $script

  if ENV['gui'] == 'true'
    # Install ubuntu-desktop and virtualbox additions
    config.vm.provision "shell", keep_color: true, inline: "apt-get update"
    config.vm.provision "shell", keep_color: true, inline: "apt-get install -y virtualbox-guest-dkms"
    config.vm.provision "shell", keep_color: true, inline: "apt-get install -y virtualbox-guest-utils"
    config.vm.provision "shell", keep_color: true, inline: "apt-get install -y virtualbox-guest-x11"
    config.vm.provision "shell", keep_color: true, inline: "sed -i 's/allowed_users=.*$/allowed_users=anybody/' /etc/X11/Xwrapper.config"
    #the ; true is used to ignore errors from ubuntu-desktop, vagrant reload should be done after provisioning
    config.vm.provision "shell", keep_color: true, inline: "sudo sh -c 'apt-get install -y ubuntu-desktop ; true'"
  end
  
end
